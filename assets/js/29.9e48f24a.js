(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{357:function(t,a,s){"use strict";s.r(a);var e=s(8),n=Object(e.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p"),a("div",{staticClass:"table-of-contents"},[a("ul",[a("li",[a("a",{attrs:{href:"#最小的范围"}},[t._v("最小的范围")])]),a("li",[a("a",{attrs:{href:"#实例方法"}},[t._v("实例方法")])]),a("li",[a("a",{attrs:{href:"#更大的范围-不重要"}},[t._v("更大的范围(不重要)")])]),a("li",[a("a",{attrs:{href:"#静态方法"}},[t._v("静态方法")])]),a("li",[a("a",{attrs:{href:"#线程安全的集合"}},[t._v("线程安全的集合")])])])]),a("p"),t._v(" "),a("p",[t._v("详见前面内存管理：静态变量在方法区；局部变量在栈内存；实例变量在堆内存\n"),a("img",{attrs:{src:"https://img2024.cnblogs.com/blog/3387348/202405/3387348-20240513215409267-325964550.png",alt:""}})]),t._v(" "),a("p",[t._v("栈可能有多个，有主栈也有分支栈，不同的栈不共享局部变量，"),a("strong",[t._v("局部变量不存在线程安全问题")]),t._v("\n而"),a("strong",[t._v("方法区、堆内存")]),t._v("是所有线程共享的，所以"),a("strong",[t._v("静态变量和实例变量可能出现线程安全问题")]),t._v("，一句话，成员变量可能出现线程安全问题")]),t._v(" "),a("blockquote",[a("p",[t._v("补充：常量不会遇到线程安全问题")])]),t._v(" "),a("ul",[a("li",[t._v("this：最直观的关系")])]),t._v(" "),a("h3",{attrs:{id:"最小的范围"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#最小的范围"}},[t._v("#")]),t._v(" 最小的范围")]),t._v(" "),a("p",[t._v("框住类的方法的局部，被框柱的叫同步代码块。这是效率最高的，也是最常用的")]),t._v(" "),a("h3",{attrs:{id:"实例方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实例方法"}},[t._v("#")]),t._v(" 实例方法")]),t._v(" "),a("p",[t._v("写在实例方法上，适合于共享对象就是 this 的情况。优点是简洁，代码少。缺点：范围大了点，执行效率较低")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("synchronized")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" 等"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" 方法名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("方法参数列表"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"更大的范围-不重要"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#更大的范围-不重要"}},[t._v("#")]),t._v(" 更大的范围(不重要)")]),t._v(" "),a("p",[t._v("上面的框实例方法已经很少用，本方法更是仅在理论层面探讨\n框柱线程的局部（比如框柱调用方法的代码片段，则整个类方法执行时都是一个整体。注意这时不写 this，因为这时 this 是线程对象，并不是共享对象了）")]),t._v(" "),a("h3",{attrs:{id:"静态方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#静态方法"}},[t._v("#")]),t._v(" 静态方法")]),t._v(" "),a("p",[t._v("写在静态方法上，锁的就是类。类锁永远只有 1 把，与类创建了多少个实例对象无关。")]),t._v(" "),a("blockquote",[a("p",[a("strong",[t._v("对象锁")]),t._v("用来保护"),a("strong",[t._v("实例变量")]),t._v("的安全\n"),a("strong",[t._v("类锁")]),t._v("用来保护"),a("strong",[t._v("静态变量")]),t._v("的安全")])]),t._v(" "),a("h3",{attrs:{id:"线程安全的集合"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#线程安全的集合"}},[t._v("#")]),t._v(" 线程安全的集合")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("非线程安全的集合")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("线程安全的集合")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}})])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("ArrayList")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("Vector")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("大小可调的数组")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("HashMap, HashSet")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("ConcurrentHashMap")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("基于哈希表的集合/映射实现")])])])]),t._v(" "),a("blockquote",[a("p",[t._v("现在 HashMap 继承的是 Map，而以前 Hashtable 是继承陈旧的 Dictionary 类的)")])])])}),[],!1,null,null,null);a.default=n.exports}}]);
(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{352:function(t,v,a){"use strict";a.r(v);var _=a(8),s=Object(_.a)({},(function(){var t=this,v=t._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("p"),v("div",{staticClass:"table-of-contents"},[v("ul",[v("li",[v("a",{attrs:{href:"#静态变量"}},[t._v("静态变量")])]),v("li",[v("a",{attrs:{href:"#变量分类"}},[t._v("变量分类")])]),v("li",[v("a",{attrs:{href:"#内存英文单词"}},[t._v("内存英文单词")])])])]),v("p"),t._v(" "),v("h3",{attrs:{id:"静态变量"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#静态变量"}},[t._v("#")]),t._v(" 静态变量")]),t._v(" "),v("p",[t._v("静态变量可以被类的所有实例共享，无论一个类创建了多少个对象，它们都共享同一份静态变量。也就是说，静态变量只会被分配一次内存，即使创建多个对象，这样可以节省内存。")]),t._v(" "),v("p",[t._v("静态变量创建方式：创建变量时，用 "),v("code",[t._v("static")]),t._v(" 关键字修饰。")]),t._v(" "),v("p",[v("strong",[t._v("静态变量在方法区；局部变量在栈内存；实例变量在堆内存")])]),t._v(" "),v("h3",{attrs:{id:"变量分类"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#变量分类"}},[t._v("#")]),t._v(" 变量分类")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("中文术语")]),t._v(" "),v("th",[t._v("英文术语")]),t._v(" "),v("th",[t._v("描述")]),t._v(" "),v("th",[t._v("存储位置")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("实例变量")]),t._v(" "),v("td",[t._v("Instance Variables")]),t._v(" "),v("td",[t._v("直接定义在类中的非 static 变量，每个类的实例都有一份独立的副本。")]),t._v(" "),v("td",[t._v("堆内存")])]),t._v(" "),v("tr",[v("td",[t._v("静态变量（类变量）")]),t._v(" "),v("td",[t._v("Class Variables")]),t._v(" "),v("td",[t._v("定义为 static，属于类本身，而不是类的任何对象。所有实例共享这同一内存区域。")]),t._v(" "),v("td",[t._v("方法区")])]),t._v(" "),v("tr",[v("td",[t._v("局部变量")]),t._v(" "),v("td",[t._v("Local Variales")]),t._v(" "),v("td",[t._v("在方法内部定义的变量，只在方法执行期间存在。")]),t._v(" "),v("td",[t._v("栈内存")])])])]),t._v(" "),v("p",[v("img",{attrs:{src:"https://ice2604-navi.github.io/assets/Vairables.png",alt:""}})]),t._v(" "),v("p",[t._v("其中静态变量和实例变量合称为"),v("strong",[t._v("成员变量")])]),t._v(" "),v("h3",{attrs:{id:"内存英文单词"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#内存英文单词"}},[t._v("#")]),t._v(" 内存英文单词")]),t._v(" "),v("p",[t._v("堆内存、栈内存和方法区在英文中的对应术语分别是：")]),t._v(" "),v("p",[t._v("堆内存：Heap Memory")]),t._v(" "),v("p",[t._v("栈内存：Stack Memory")]),t._v(" "),v("p",[t._v("方法区：Method Area，曾被称为永久代（PermGen），从 Java 8 开始，叫做元空间（Metaspace）。冷门一点的，叫“非堆内存”（Non-Heap Memory）")])])}),[],!1,null,null,null);v.default=s.exports}}]);
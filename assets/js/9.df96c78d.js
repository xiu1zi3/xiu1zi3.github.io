(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{336:function(t,a,s){"use strict";s.r(a);var r=s(8),v=Object(r.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p"),a("div",{staticClass:"table-of-contents"},[a("ul",[a("li",[a("a",{attrs:{href:"#预备知识"}},[t._v("预备知识")]),a("ul",[a("li",[a("a",{attrs:{href:"#比特、字节"}},[t._v("比特、字节")])]),a("li",[a("a",{attrs:{href:"#java-是强类型语言"}},[t._v("java 是强类型语言")])])])]),a("li",[a("a",{attrs:{href:"#基本数据类型"}},[t._v("基本数据类型")]),a("ul",[a("li",[a("a",{attrs:{href:"#数值类型"}},[t._v("数值类型")])]),a("li",[a("a",{attrs:{href:"#布尔类型"}},[t._v("布尔类型")])])])]),a("li",[a("a",{attrs:{href:"#引用数据类型"}},[t._v("引用数据类型")])]),a("li",[a("a",{attrs:{href:"#例子-数组初始化"}},[t._v("例子：数组初始化")])])])]),a("p"),t._v(" "),a("h2",{attrs:{id:"预备知识"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#预备知识"}},[t._v("#")]),t._v(" 预备知识")]),t._v(" "),a("h3",{attrs:{id:"比特、字节"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#比特、字节"}},[t._v("#")]),t._v(" 比特、字节")]),t._v(" "),a("p",[a("strong",[t._v("bit")]),t._v("（位）是内部数据存储最小单位，有时叫比特，小写的 "),a("strong",[t._v("b")]),t._v(" "),a("strong",[t._v("Byte")]),t._v("（字节）是数据处理的基本单位，大写的 "),a("strong",[t._v("B")]),t._v("\n字符是指计算机使用的字母、数字、汉字、符号。占 2 个字节")]),t._v(" "),a("h3",{attrs:{id:"java-是强类型语言"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#java-是强类型语言"}},[t._v("#")]),t._v(" java 是强类型语言")]),t._v(" "),a("p",[a("strong",[t._v("强类型语言")]),t._v("要求变量必须先定义再使用，变量的使用严格符合规定。java 属于强类型语言，js, vb 属于"),a("strong",[t._v("弱类型语言")]),t._v("。 python 是强是弱仍存在争议")]),t._v(" "),a("p",[t._v("Java 数据类型分为基本数据类型和引用类型")]),t._v(" "),a("h2",{attrs:{id:"基本数据类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本数据类型"}},[t._v("#")]),t._v(" 基本数据类型")]),t._v(" "),a("p",[t._v("也可以垂直分成 4 大类 8 小种（四大类是整数类、浮点类、字符类、布尔类）\nbyte 1\nshort 2\nint 4\nlong 8\n顺口溜 byte short int long, 1248")]),t._v(" "),a("h3",{attrs:{id:"数值类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数值类型"}},[t._v("#")]),t._v(" 数值类型")]),t._v(" "),a("blockquote",[a("p",[t._v("Java 没有无符号数据类型，所有的整数数据类型都是有符号的")])]),t._v(" "),a("h4",{attrs:{id:"整数类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#整数类型"}},[t._v("#")]),t._v(" 整数类型")]),t._v(" "),a("ol",[a("li",[t._v("byte: "),a("strong",[t._v("单字节")]),t._v("整数 "),a("code",[t._v("[-128, +127]")]),t._v("1B=8b")]),t._v(" "),a("li",[t._v("short: "),a("strong",[t._v("两字节")]),t._v("整数 "),a("code",[t._v("[-32768, 32767]")]),t._v("16 位")]),t._v(" "),a("li",[t._v("int: "),a("strong",[t._v("四字节")]),a("code",[t._v("[-2147483648,2147483647]")]),t._v("32 位")]),t._v(" "),a("li",[t._v("long: "),a("strong",[t._v("八字节")]),t._v("[-2^{63}, 2^{63}-1]64 位")])]),t._v(" "),a("p",[t._v("tips: "),a("code",[t._v("128")]),t._v("= 2^7 , "),a("code",[t._v("32768")]),t._v("= 2^{15} ,"),a("code",[t._v("2147483648")]),t._v("= 2^{31} 大概 21 亿")]),t._v(" "),a("h4",{attrs:{id:"浮点类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浮点类型"}},[t._v("#")]),t._v(" 浮点类型")]),t._v(" "),a("ol",{attrs:{start:"5"}},[a("li",[t._v("float: "),a("strong",[t._v("四字节")]),t._v("。单精度浮点数")]),t._v(" "),a("li",[t._v("double: "),a("strong",[t._v("八字节")]),t._v("。双精度浮点数")])]),t._v(" "),a("h4",{attrs:{id:"字符类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字符类型"}},[t._v("#")]),t._v(" 字符类型")]),t._v(" "),a("ol",{attrs:{start:"7"}},[a("li",[t._v("char："),a("strong",[t._v("两字节")]),t._v(" 16 位")])]),t._v(" "),a("blockquote",[a("ul",[a("li",[t._v("char 类型表示现实世界中文字,文字和计算机二进制之间默认是不存在任何转换关系的")]),t._v(" "),a("li",[t._v('为了让计算机表示现实中的文字.需要制定好"文字"和"二进制"之间对照关系,称为“字符编码”')])])]),t._v(" "),a("p",[t._v("类型转换优先级：")]),t._v(" "),a("p",[t._v("低位数转成高位数，整数转成浮点数")]),t._v(" "),a("p",[t._v("如果违反优先级，需要使用强制类型转换。注意避免内存溢出和精度问题")]),t._v(" "),a("blockquote",[a("p",[t._v("byte(8 位),short(16 位),char(16 位)->\nint(32 位)->\nlong(64 位)->\nfloat(32 位)->\ndouble(64 位)")])]),t._v(" "),a("h3",{attrs:{id:"布尔类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#布尔类型"}},[t._v("#")]),t._v(" 布尔类型")]),t._v(" "),a("ol",{attrs:{start:"8"}},[a("li",[t._v("boolean：true 或 false 只占 "),a("strong",[t._v("1 个位")])])]),t._v(" "),a("p",[t._v("String 不是关键字，是一个类。int 的类是 Integer")]),t._v(" "),a("h2",{attrs:{id:"引用数据类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#引用数据类型"}},[t._v("#")]),t._v(" 引用数据类型")]),t._v(" "),a("p",[t._v("类、接口、数组等")]),t._v(" "),a("p",[t._v("比如 Student 是类名，属于引用数据类型，是 Student")]),t._v(" "),a("h2",{attrs:{id:"例子-数组初始化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#例子-数组初始化"}},[t._v("#")]),t._v(" 例子：数组初始化")]),t._v(" "),a("p",[a("strong",[t._v("除了八大基本类型，都是引用类型：字符串是引用类型，数组也是引用类型")])]),t._v(" "),a("ul",[a("li",[t._v("静态初始化：创建同时赋值")])]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("ul",[a("li",[t._v("动态初始化： 创建时默认初始化")])]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nb"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("默认初始化：数组的元素相当于类的实例变量。只要数组被分配空间，每个元素和实例变量一样被隐式初始化（数值是 0 或 0.0， 布尔值是 false，非基本类型的默认值都是 null）")])])])}),[],!1,null,null,null);a.default=v.exports}}]);
(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{345:function(a,t,s){"use strict";s.r(t);var n=s(8),e=Object(n.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("p"),t("div",{staticClass:"table-of-contents"},[t("ul",[t("li",[t("a",{attrs:{href:"#final"}},[a._v("final")])]),t("li",[t("a",{attrs:{href:"#加-final-的实例变量"}},[a._v("加 final 的实例变量")])]),t("li",[t("a",{attrs:{href:"#final-与垃圾回收"}},[a._v("final 与垃圾回收")])])])]),t("p"),a._v(" "),t("h3",{attrs:{id:"final"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#final"}},[a._v("#")]),a._v(" final")]),a._v(" "),t("p",[a._v("final 表示不可变的，C++对应的是 const")]),a._v(" "),t("h3",{attrs:{id:"加-final-的实例变量"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#加-final-的实例变量"}},[a._v("#")]),a._v(" 加 final 的实例变量")]),a._v(" "),t("p",[a._v("java 语言规定实例变量使用 final 修饰之后,必须手动赋值,不能采用系统默认值")]),a._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("final")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" age"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),t("p",[a._v("会出错")]),a._v(" "),t("p",[a._v("正确的写法是\n方法 1：")]),a._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("final")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" age"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("10")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),t("p",[a._v("或者\n方法 2：")]),a._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("final")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" age"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Panda")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("age"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("10")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("p",[a._v("方法 1 看上去是提前赋值，其实也是等到构造方法执行时才真正赋值\n本质上方法 1 和方法 2 是一样的")]),a._v(" "),t("h3",{attrs:{id:"final-与垃圾回收"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#final-与垃圾回收"}},[a._v("#")]),a._v(" final 与垃圾回收")]),a._v(" "),t("p",[a._v("final 修饰的引用,一旦它指向了一个对象之后\n它就不能再指向别的对象了（无 final 的情况下，我们也一般不让引用指向别的值）,被指向的对象无法被垃圾回收器回收")]),a._v(" "),t("p",[a._v("等到 JVM 细说")])])}),[],!1,null,null,null);t.default=e.exports}}]);
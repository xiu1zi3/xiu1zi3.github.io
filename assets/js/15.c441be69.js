(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{344:function(t,a,e){"use strict";e.r(a);var s=e(8),v=Object(s.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p"),a("div",{staticClass:"table-of-contents"},[a("ul",[a("li",[a("a",{attrs:{href:"#什么是封装"}},[t._v("什么是封装?")])]),a("li",[a("a",{attrs:{href:"#private-例子"}},[t._v("private 例子")])]),a("li",[a("a",{attrs:{href:"#static-是非访问修饰符"}},[t._v("static 是非访问修饰符")])]),a("li",[a("a",{attrs:{href:"#从实例变量到静态变量"}},[t._v("从实例变量到静态变量")])])])]),a("p"),t._v(" "),a("h3",{attrs:{id:"什么是封装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是封装"}},[t._v("#")]),t._v(" 什么是封装?")]),t._v(" "),a("p",[t._v("public, private等访问修饰符 用来指定类、方法、变量的 访问控制权限\n一句话：属性私有，让外部不能直接访问")]),t._v(" "),a("p",[t._v("操作入口变成 get 和 set 方法")]),t._v(" "),a("h3",{attrs:{id:"private-例子"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#private-例子"}},[t._v("#")]),t._v(" private 例子")]),t._v(" "),a("p",[t._v("1.用 private 进行修饰,表示私有的,修饰的属性只能在本类中访问")]),t._v(" "),a("p",[t._v("2.对外提供简单的操作入口,以后外部程序想要访问这些属性\n必须通过这些简单入口进行访问:")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("对外提供两个公开的方法,分别是 set 方法和 get 方法")])]),t._v(" "),a("li",[a("p",[t._v("想修改这个属性,调用 set 方法")])]),t._v(" "),a("li",[a("p",[t._v("想读取这个属性,调用 get 方法")]),t._v(" "),a("p",[t._v("3.set 方法例子")])])]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setAge")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    age "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("4.get 方法例子")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getAge")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" age"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("除了 private，还有封装程度靠中间的默认（package private）、protected")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("访问级别")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("同一包内的其他类")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("子类")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("全局")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("private")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✘")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✘")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✘")])]),t._v(" "),a("tr",[a("td",[t._v("默认")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✘")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✘")])]),t._v(" "),a("tr",[a("td",[t._v("protected")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✘")])]),t._v(" "),a("tr",[a("td",[t._v("public")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])])])]),t._v(" "),a("h3",{attrs:{id:"static-是非访问修饰符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#static-是非访问修饰符"}},[t._v("#")]),t._v(" static 是非访问修饰符")]),t._v(" "),a("blockquote",[a("p",[t._v("显然，封装里面的 set 和 get 方法不使用 static 关键字")])]),t._v(" "),a("ul",[a("li",[t._v("无 static 修饰的方法\n"),a("code",[t._v("引用.方法名(实参)")])]),t._v(" "),a("li",[t._v("含 static 修饰的方法\n"),a("code",[t._v("类名.方法名(实参)")])])]),t._v(" "),a("p",[t._v("类中对象都具有的属性，并且所有对象的这个属性都一样，使用 static，存在"),a("strong",[t._v("方法区")]),t._v("。方法也是如此")]),t._v(" "),a("blockquote",[a("p",[t._v("不加 static 的 ----\x3e 对象级别\n带着 static 的 ----\x3e 类级别")])]),t._v(" "),a("h3",{attrs:{id:"从实例变量到静态变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#从实例变量到静态变量"}},[t._v("#")]),t._v(" 从实例变量到静态变量")]),t._v(" "),a("ol",[a("li",[t._v("实例变量\n假设这样一种实例变量，一个对象就有一份,100 个对象就有 100 份.这种设计有什么缺点呢?")])]),t._v(" "),a("blockquote",[a("p",[t._v("例子: 用 Chinese 类创建 100 个不同的对象,但是每个对象的国籍其实都是中国.")])]),t._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[t._v("静态的实例变量，也就是类变量")])]),t._v(" "),a("p",[t._v("在类加载的时候初始化,不需要创建对象,内存就开辟了，存储在"),a("strong",[t._v("方法区")]),t._v("内存中!")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("什么时候成员变量声明为实例变量呢?\n所有对象都有这个属性,但这个属性的值随着对象变化而变化")])]),t._v(" "),a("li",[a("p",[t._v("什么时候成员变量声明为静态变量呢?\n"),a("strong",[t._v("所有对象都有这个属性，并且所有对象的这个属性的值是一样的")]),t._v("，建议定义为静态变量，节省内存的开销。")])])])])}),[],!1,null,null,null);a.default=v.exports}}]);
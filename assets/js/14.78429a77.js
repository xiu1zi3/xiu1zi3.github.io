(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{340:function(a,t,s){"use strict";s.r(t);var n=s(8),e=Object(n.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("p"),t("div",{staticClass:"table-of-contents"},[t("ul",[t("li",[t("a",{attrs:{href:"#什么是继承"}},[a._v("什么是继承？")])]),t("li",[t("a",{attrs:{href:"#语法格式"}},[a._v("语法格式")])]),t("li",[t("a",{attrs:{href:"#继承的内容有啥"}},[a._v("继承的内容有啥?")])]),t("li",[t("a",{attrs:{href:"#继承的作用"}},[a._v("继承的作用")])]),t("li",[t("a",{attrs:{href:"#单继承"}},[a._v("单继承")])]),t("li",[t("a",{attrs:{href:"#java-lang-object"}},[a._v("java.lang.Object")])])])]),t("p"),a._v(" "),t("h3",{attrs:{id:"什么是继承"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#什么是继承"}},[a._v("#")]),a._v(" 什么是继承？")]),a._v(" "),t("p",[a._v("一句话，代码复用")]),a._v(" "),t("h3",{attrs:{id:"语法格式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#语法格式"}},[a._v("#")]),a._v(" 语法格式")]),a._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("修饰符列表"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" 类名 "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("extends")]),a._v(" 父类名 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    类体（属性、方法）\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("h3",{attrs:{id:"继承的内容有啥"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#继承的内容有啥"}},[a._v("#")]),a._v(" 继承的内容有啥?")]),a._v(" "),t("ul",[t("li",[a._v("==私有的==不支持继承")]),a._v(" "),t("li",[a._v("==构造方法==不支持继承")]),a._v(" "),t("li",[a._v("其他数据都可以继承")])]),a._v(" "),t("h3",{attrs:{id:"继承的作用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#继承的作用"}},[a._v("#")]),a._v(" 继承的作用")]),a._v(" "),t("p",[a._v('除了代码复用，继承还是方法覆盖和多态的基础。有了继承才有以后"方法的覆盖"和"多态机制"')]),a._v(" "),t("h3",{attrs:{id:"单继承"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#单继承"}},[a._v("#")]),a._v(" 单继承")]),a._v(" "),t("p",[a._v("java 语言中继承只支持单继承,一个类不能同时继承很多类,只能继承一个类.c++可以多继承")]),a._v(" "),t("p",[a._v("但是 java 语言中只支持单继承，但一个类也可以"),t("strong",[a._v("间接继承")]),a._v("其他类\n比如")]),a._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("C")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("extends")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("B")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("B")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("extends")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("A")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("p",[a._v("C 直接继承了 B，C 是间接继承了 A")]),a._v(" "),t("h3",{attrs:{id:"java-lang-object"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#java-lang-object"}},[a._v("#")]),a._v(" java.lang.Object")]),a._v(" "),t("p",[a._v("如果 java 类不显示指定要继承的类，则继承 java.lang.Object 类")]),a._v(" "),t("p",[a._v("JavaSE 库提供的默认的类。java 任何一个类都有 Object 类的特征，可以说是“老祖宗”")])])}),[],!1,null,null,null);t.default=e.exports}}]);